#+TITLE: Emacs Config
* Load sensible-defaults.el

#+BEGIN_SRC emacs-lisp
  (load-file "~/.emacs.d/sensible-defaults.el")
  (sensible-defaults/use-all-settings)
  (sensible-defaults/bind-commenting-and-uncommenting)
  (sensible-defaults/bind-home-and-end-keys)
#+END_SRC
* Set Personal Information

#+BEGIN_SRC emacs-lisp
  (setq user-full-name "Lage Ragnarsson"
        user-mail-address "lage.ragnarsson@gmail.com"
        calendar-latitude 58.41
        calendar-longitude 15.62
        calendar-location-name "Linköping, Sweden")
#+END_SRC
* Install Packages
#+BEGIN_SRC emacs-lisp
  (require 'use-package)
  (use-package company :ensure t)
  (use-package glsl-mode :ensure t)
  (use-package expand-region :ensure t)
  (use-package monokai-theme :ensure t)
  (use-package zenburn-theme :ensure t)
  (use-package gruvbox-theme :ensure t)
  (use-package multiple-cursors :ensure t)
  (use-package web-mode :ensure t)
  (use-package yasnippet :ensure t)
  (use-package cider :ensure t)
  (use-package idle-highlight-mode :ensure t)
  (use-package paredit :ensure t)
  (use-package powerline :ensure t)
  (use-package rainbow-delimiters :ensure t)
  (use-package js2-mode :ensure t)
  (use-package virtualenvwrapper :ensure t)
#+END_SRC
* Window Features
Remove clutter, start in fullscreen.

#+BEGIN_SRC emacs-lisp
(load-library "iso-transl")

(setq inhibit-startup-screen t)
(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)
(global-linum-mode t)

(add-to-list 'initial-frame-alist '(fullscreen . maximized))
(setq column-number-mode t)

;Powerline
(powerline-center-theme)

#+End_SRC
* Formatting
#+BEGIN_SRC emacs-lisp
  ;GLSL
  (autoload 'glsl-mode "glsl-mode" nil t)
  (add-to-list 'auto-mode-alist '("\\.glsl\\'" . glsl-mode))
  (add-to-list 'auto-mode-alist '("\\.vert\\'" . glsl-mode))
  (add-to-list 'auto-mode-alist '("\\.frag\\'" . glsl-mode))
  (add-to-list 'auto-mode-alist '("\\.geom\\'" . glsl-mode))

  ;Tabs
  (setq-default tab-width 4)
  (setq-default c-default-style "linux"
                c-basic-offset 4)
  (setq-default indent-tabs-mode nil)

  (add-to-list 'auto-mode-alist '("\\.html\\'" . web-mode))

  (add-to-list 'auto-mode-alist '("\\.js$" . js2-mode))
#+END_SRC
* Theme and Buffer Visuals

#+BEGIN_SRC emacs-lisp
  (load-theme 'gruvbox t)
  ;(load-theme 'zenburn t)
  ;(load-theme 'monokai t)

  (require 'whitespace)
  (setq whitespace-style '(face tabs tab-mark trailing))
  (global-whitespace-mode 1)

  (show-paren-mode)
  (global-hl-line-mode 1)

  (global-prettify-symbols-mode t)

  (add-hook 'js2-mode-hook
            (lambda ()
              (push '("function" . ?ƒ) prettify-symbols-alist)))

  (set-face-foreground 'highlight nil )
  ;(set-face-attribute 'region nil :background "#666")

#+END_SRC
* Various Settings
#+BEGIN_SRC emacs-lisp
  ;Tramp
  (setq tramp-default-method "ssh")

  ;Paredit
  (add-hook 'clojure-mode-hook 'paredit-mode)
  (add-hook 'lisp-mode-hook 'paredit-mode)
  (add-hook 'cider-repl-mode-hook 'paredit-mode)

  ;prog-mode
  (defun my-prog-mode-hook ()
    (idle-highlight-mode 1)
    (rainbow-delimiters-mode 1))

  (add-hook 'prog-mode-hook 'my-prog-mode-hook)

  ;CIDER
  (setq cider-mode-line-show-connection nil)

  ; Virtual env wrapper (Python)
  (require 'virtualenvwrapper)
  (venv-initialize-interactive-shells)

#+END_SRC
* Command Bindings

#+BEGIN_SRC emacs-lisp
  (global-set-key "\M-i" 'delete-indentation)

  (global-set-key "\M-n" "\C-u1\C-v") ;Scroll down
  (global-set-key "\M-p" "\C-u1\M-v") ;Scroll up

  ;Multiple cursors
  (require 'multiple-cursors)
  (global-set-key (kbd "C-S-c C-S-c") 'mc/edit-lines)
  (global-set-key (kbd "C-<") 'mc/mark-next-like-this)
  (global-set-key (kbd "C->") 'mc/mark-previous-like-this)
  (global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this)

  (defun end-of-line-and-indented-new-line ()
    (interactive)
    (end-of-line)
    (newline-and-indent))

  (global-set-key (kbd "<S-return>") 'end-of-line-and-indented-new-line)

  (setq smerge-command-prefix (kbd "C-§"))

#+END_SRC
* Auto-complete and Snippets
Activate company mode:
#+BEGIN_SRC emacs-lisp
(add-hook 'after-init-hook 'global-company-mode)
#+END_SRC
* Org-mode
#+BEGIN_SRC emacs-lisp
  (setq org-ellipsis "⤵")
  (setq org-src-fontify-natively t)
  (setq org-src-tab-acts-natively t)
  (setq TeX-parse-self t)
  (setq TeX-PDF-mode t)
  (setq org-html-postamble nil)
#+END_SRC
* Notes
That's all folks!
